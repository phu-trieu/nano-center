! function(e, t) {
    e.ImageZoom = function(o, i) {
        function a(e) {
            var t = parseInt(e);
            return t = isNaN(t) ? 0 : t
        }
        var s = this;
        s.$el = e(o), s.$el.data("imagezoom", s), s.init = function(t) {
            s.options = e.extend({}, e.ImageZoom.defaults, t), s.$viewer = e('<div class="zm-viewer ' + s.options.zoomViewerClass + '"></div>').appendTo("body"), s.$handler = e('<div class="zm-handler' + s.options.zoomHandlerClass + '"></div>').appendTo("body"), s.isBigImageReady = -1, s.$largeImg = null, s.isActive = !1, s.$handlerArea = null, s.isWebkit = /chrome/.test(navigator.userAgent.toLowerCase()) || /safari/.test(navigator.userAgent.toLowerCase()), s.evt = {
                x: -1,
                y: -1
            }, s.options.bigImageSrc = "" == s.options.bigImageSrc ? s.$el.attr("src") : s.options.bigImageSrc, (new Image).src = s.options.bigImageSrc, s.callIndex = e.ImageZoom._calltimes + 1, s.animateTimer = null, e.ImageZoom._calltimes += 1, e(document).bind("mousemove.imagezoom" + s.callIndex, function(e) {
                s.isActive && s.moveHandler(e.pageX, e.pageY)
            }), s.$el.bind("mouseover.imagezoom", function(e) {
                s.isActive = !0, s.showViewer(e)
            })
        }, s.moveHandler = function(e, o) {
            var i, n, r, l, h, d, m, g, p = s.$el.offset(),
                c = s.$el.outerWidth(!1),
                f = s.$el.outerHeight(!1);
            e >= p.left && e <= p.left + c && o >= p.top && o <= p.top + f ? (p.left = p.left + a(s.$el.css("borderLeftWidth")) + a(s.$el.css("paddingLeft")), p.top = p.top + a(s.$el.css("borderTopWidth")) + a(s.$el.css("paddingTop")), c = s.$el.width(), f = s.$el.height(), e >= p.left && e <= p.left + c && o >= p.top && o <= p.top + f && (s.evt = {
                x: e,
                y: o
            }, "follow" == s.options.type && s.$viewer.css({
                //jj top: o - s.$viewer.outerHeight() / 2,
                //left: e - s.$viewer.outerWidth() / 2
                top: 0,
                left: 0
            }), 1 == s.isBigImageReady && (r = o - p.top, l = e - p.left, "inner" == s.options.type ? (i = -s.$largeImg.height() * r / f + r, n = -s.$largeImg.width() * l / c + l) : "standard" == s.options.type ? (h = l - s.$handlerArea.width() / 2, d = r - s.$handlerArea.height() / 2, m = s.$handlerArea.width(), g = s.$handlerArea.height(), 0 > h ? h = 0 : h > c - m && (h = c - m), 0 > d ? d = 0 : d > f - g && (d = f - g), n = -h / s.scale, i = -d / s.scale, s.isWebkit ? (s.$handlerArea.css({
                opacity: .99
            }), setTimeout(function() {
                s.$handlerArea.css({
                    top: d,
                    left: h,
                    opacity: 1
                })
            }, 0)) : s.$handlerArea.css({
                top: (d / 2) - 52,
                left: (h / 2) - 52
            })) : "follow" == s.options.type && (i = -s.$largeImg.height() / f * r + s.options.zoomSize[1] / 2, n = -s.$largeImg.width() / c * l + s.options.zoomSize[0] / 2, -i > s.$largeImg.height() ? i = -s.$largeImg.height() : i > 100 && (i = 100), -n > s.$largeImg.width() ? n = -s.$largeImg.width() : n > 100 && (n = 100)), s.options.smoothMove ? (t.clearTimeout(s.animateTimer), s.smoothMove(n, i)) : s.$viewer.find("img").css({
                top: (i / 2) - 52,
                left: (n / 2) - 52
            })))) : (s.isActive = !1, s.$viewer.hide(), s.$handler.hide(), s.options.onHide(s), t.clearTimeout(s.animateTimer), s.animateTimer = null)
        }, s.showViewer = function(t) {
            var o, i, n, r, l, h = s.$el.offset().top,
                d = a(s.$el.css("borderTopWidth")),
                m = a(s.$el.css("paddingTop")),
                g = s.$el.offset().left,
                p = a(s.$el.css("borderLeftWidth")),
                c = a(s.$el.css("paddingLeft"));
            h = h + d + m, g = g + p + c, o = s.$el.width(), i = s.$el.height(), s.isBigImageReady < 1 && e("div", s.$viewer).remove(), "inner" == s.options.type ? s.$viewer.css({
                top: h,
                left: g,
                width: o,
                height: i
            }).show() : "standard" == s.options.type ? (n = "" == s.options.alignTo ? s.$el : e("#" + s.options.alignTo), "left" == s.options.position ? (r = n.offset().left - s.options.zoomSize[0] - s.options.offset[0], l = n.offset().top + s.options.offset[1]) : "right" == s.options.position && (r = n.offset().left + n.width() + s.options.offset[0], l = n.offset().top + s.options.offset[1]), s.$viewer.css({
                top: l,
                left: r,
                width: s.options.zoomSize[0],
                height: s.options.zoomSize[1]
            }).show(), s.$handlerArea && (s.scale = o / s.$largeImg.width(), s.$handlerArea.css({
                width: s.$viewer.width() * s.scale,
                height: s.$viewer.height() * s.scale
            }))) : "follow" == s.options.type && s.$viewer.css({
                //width: s.options.zoomSize[0],
                //height: s.options.zoomSize[1],
				width: 500,
                height: 500,
                top: t.pageY - s.options.zoomSize[1] / 2,
                left: t.pageX - s.options.zoomSize[0] / 2
            }).show(), s.$handler.css({
                top: h,
                left: g,
                width: o,
                height: i
            }).show(), s.options.onShow(s), -1 == s.isBigImageReady && (s.isBigImageReady = 0, fastImg(s.options.bigImageSrc, function() {
                if (e.trim(e(this).attr("src")) == e.trim(s.options.bigImageSrc)) {
                    if (s.$viewer.append('<img src="' + s.$el.attr("src") + '" class="zm-fast" style="position:absolute;width:' + this.width + "px;height:" + this.height + 'px">'), s.isBigImageReady = 1, s.$largeImg = e('<img src="' + s.options.bigImageSrc + '" style="position:absolute;width:' + this.width + "px;height:" + this.height + 'px">'), s.$viewer.append(s.$largeImg), "standard" == s.options.type) {
                        var i = o / this.width;
                        s.$handlerArea = e('<div class="zm-handlerarea" style="width:' + s.$viewer.width() * i + "px;height:" + s.$viewer.height() * i + 'px"></div>').appendTo(s.$handler), s.scale = i
                    } - 1 == s.evt.x && -1 == s.evt.y ? s.moveHandler(t.pageX, t.pageY) : s.moveHandler(s.evt.x, s.evt.y), s.options.showDescription && s.$el.attr("alt") && "" != e.trim(s.$el.attr("alt")) && s.$viewer.append('<div class="' + s.options.descriptionClass + '">' + s.$el.attr("alt") + "</div>")
                }
            }, function() {}, function() {}))
        }, s.changeImage = function(e, t) {
            this.$el.attr("src", e), this.isBigImageReady = -1, this.options.bigImageSrc = "string" == typeof t ? t : e, s.options.preload && ((new Image).src = this.options.bigImageSrc), this.$viewer.hide().empty(), this.$handler.hide().empty(), this.$handlerArea = null
        }, s.changeZoomSize = function(e, t) {
            s.options.zoomSize = [e, t]
        }, s.destroy = function() {
            e(document).unbind("mousemove.imagezoom" + s.callIndex), this.$el.unbind(".imagezoom"), this.$viewer.remove(), this.$handler.remove(), this.$el.removeData("imagezoom")
        }, s.smoothMove = function(e, o) {
            var i, a, n, r, l, h = 10,
                d = parseInt(s.$largeImg.css("top"));
            return d = isNaN(d) ? 0 : d, i = parseInt(s.$largeImg.css("left")), i = isNaN(i) ? 0 : i, o = parseInt(o), e = parseInt(e), d == o && i == e ? (t.clearTimeout(s.animateTimer), void(s.animateTimer = null)) : (a = o - d, n = e - i, r = d + a / Math.abs(a) * Math.ceil(Math.abs(a / h)), l = i + n / Math.abs(n) * Math.ceil(Math.abs(n / h)), s.$viewer.find("img").css({
                top: r,
                left: l
            }), void(s.animateTimer = setTimeout(function() {
                s.smoothMove(e, o)
            }, 10)))
        }, s.init(i)
    }, e.ImageZoom.defaults = {
        bigImageSrc: "",
        preload: !0,
        type: "inner",
        smoothMove: !1,
        position: "right",
        offset: [10, 0],
        alignTo: "",
        zoomSize: [100, 100],
        descriptionClass: "zm-description",
        zoomViewerClass: "",
        zoomHandlerClass: "",
        showDescription: !0,
        onShow: function() {},
        onHide: function() {}
    }, e.ImageZoom._calltimes = 0, e.fn.ImageZoom = function(t) {
        return this.each(function() {
            new e.ImageZoom(this, t)
        })
    }
}(jQuery, window);
var fastImg = function() {
    var e = [],
        t = null,
        o = function() {
            for (var t = 0; t < e.length; t++) e[t].end ? e.splice(t--, 1) : e[t]();
            !e.length && i()
        },
        i = function() {
            clearInterval(t), t = null
        };
    return function(i, a, s, n) {
        var r, l, h, d, m, g = new Image;
        return g.src = i, g.complete ? (a.call(g), void(s && s.call(g))) : (l = g.width, h = g.height, g.onerror = function() {
            n && n.call(g), r.end = !0, g = g.onload = g.onerror = null
        }, r = function() {
            d = g.width, m = g.height, (d !== l || m !== h || d * m > 1024) && (a.call(g), r.end = !0)
        }, r(), g.onload = function() {
            !r.end && r(), s && s.call(g), g = g.onload = g.onerror = null
        }, void(r.end || (e.push(r), null === t && (t = setInterval(o, 0)))))
    }
}();

$(document).on({
    mouseenter: function() {
       $(".zm-viewer.followViewer").css("display", "block");
       $(".zm-handler").css("display", "block");
    }
}, "zm-handler");

$(document).on({
	  mouseleave: function() {
       $(".zm-viewer.followViewer").css("display", "none");
       $(".zm-handler").css("display", "none");
    }
}, ".zm-viewer.followViewer");
